{"version":3,"file":"react-tree-walker.js","sources":["../src/index.js"],"sourcesContent":["/* eslint-disable no-console */\n\n// Inspired by the awesome work by the Apollo team: 😘\n// https://github.com/apollographql/react-apollo/blob/master/src/getDataFromTree.ts\n//\n// This version has been adapted to be Promise based and support native Preact.\n\nconst defaultOptions = {\n  componentWillUnmount: false,\n}\n\nconst forwardRefSymbol = Symbol.for('react.forward_ref')\n\n// Lifted from https://github.com/sindresorhus/p-reduce\n// Thanks @sindresorhus! 🙏\nconst pReduce = (iterable, reducer, initVal) =>\n  new Promise((resolve, reject) => {\n    const iterator = iterable[Symbol.iterator]()\n    let i = 0\n\n    const next = total => {\n      const el = iterator.next()\n\n      if (el.done) {\n        resolve(total)\n        return\n      }\n\n      Promise.all([total, el.value])\n        .then(value => {\n          // eslint-disable-next-line no-plusplus\n          next(reducer(value[0], value[1], i++))\n        })\n        .catch(reject)\n    }\n\n    next(initVal)\n  })\n\n// Lifted from https://github.com/sindresorhus/p-map-series\n// Thanks @sindresorhus! 🙏\nconst pMapSeries = (iterable, iterator) => {\n  const ret = []\n\n  return pReduce(iterable, (a, b, i) =>\n    Promise.resolve(iterator(b, i)).then(val => {\n      ret.push(val)\n    }),\n  ).then(() => ret)\n}\n\nconst ensureChild = child =>\n  child && typeof child.render === 'function'\n    ? ensureChild(child.render())\n    : child\n\n// Preact puts children directly on element, and React via props\nconst getChildren = element =>\n  element.props && element.props.children\n    ? element.props.children\n    : element.children\n      ? element.children\n      : undefined\n\n// Preact uses \"nodeName\", React uses \"type\"\nconst getType = element => element.type || element.nodeName\n\n// Preact uses \"attributes\", React uses \"props\"\nconst getProps = element => element.props || element.attributes\n\nconst isReactElement = element => !!getType(element)\n\nconst isClassComponent = Comp =>\n  Comp.prototype &&\n  (Comp.prototype.render ||\n    Comp.prototype.isReactComponent ||\n    Comp.prototype.isPureReactComponent)\n\nconst isForwardRef = Comp =>\n  Comp.type && Comp.type.$$typeof === forwardRefSymbol\n\nconst providesChildContext = instance => !!instance.getChildContext\n\n// Recurse a React Element tree, running the provided visitor against each element.\n// If a visitor call returns `false` then we will not recurse into the respective\n// elements children.\nexport default function reactTreeWalker(\n  tree,\n  visitor,\n  context,\n  options = defaultOptions,\n) {\n  return new Promise((resolve, reject) => {\n    const safeVisitor = (...args) => {\n      try {\n        return visitor(...args)\n      } catch (err) {\n        reject(err)\n      }\n      return undefined\n    }\n\n    const recursive = (currentElement, currentContext) => {\n      if (Array.isArray(currentElement)) {\n        return Promise.all(\n          currentElement.map(item => recursive(item, currentContext)),\n        )\n      }\n\n      if (!currentElement) {\n        return Promise.resolve()\n      }\n\n      if (\n        typeof currentElement === 'string' ||\n        typeof currentElement === 'number'\n      ) {\n        // Just visit these, they are leaves so we don't keep traversing.\n        safeVisitor(currentElement, null, currentContext)\n        return Promise.resolve()\n      }\n\n      if (currentElement.type) {\n        if (currentElement.type._context) {\n          // eslint-disable-next-line no-param-reassign\n          currentElement.type._context._currentValue =\n            currentElement.props.value\n        }\n        if (currentElement.type.Provider && currentElement.type.Consumer) {\n          const el = currentElement.props.children(\n            currentElement.type.Provider._context._currentValue,\n          )\n          return recursive(el, currentContext)\n        }\n      }\n\n      if (isReactElement(currentElement)) {\n        return new Promise(innerResolve => {\n          const visitCurrentElement = (\n            render,\n            compInstance,\n            elContext,\n            childContext,\n          ) =>\n            Promise.resolve(\n              safeVisitor(\n                currentElement,\n                compInstance,\n                elContext,\n                childContext,\n              ),\n            )\n              .then(result => {\n                if (result !== false) {\n                  // A false wasn't returned so we will attempt to visit the children\n                  // for the current element.\n                  const tempChildren = render()\n                  const children = ensureChild(tempChildren)\n                  if (children) {\n                    if (Array.isArray(children)) {\n                      // If its a react Children collection we need to breadth-first\n                      // traverse each of them, and pMapSeries allows us to do a\n                      // depth-first traversal that respects Promises. Thanks @sindresorhus!\n                      return pMapSeries(\n                        children,\n                        child =>\n                          child\n                            ? recursive(child, childContext)\n                            : Promise.resolve(),\n                      )\n                        .then(innerResolve, reject)\n                        .catch(reject)\n                    }\n                    // Otherwise we pass the individual child to the next recursion.\n                    return recursive(children, childContext)\n                      .then(innerResolve, reject)\n                      .catch(reject)\n                  }\n                }\n                return undefined\n              })\n              .catch(reject)\n\n          if (\n            typeof getType(currentElement) === 'function' ||\n            isForwardRef(currentElement)\n          ) {\n            const Component = getType(currentElement)\n            const props = Object.assign(\n              {},\n              Component.defaultProps,\n              getProps(currentElement),\n              // For Preact support so that the props get passed into render\n              // function.\n              {\n                children: getChildren(currentElement),\n              },\n            )\n            if (isForwardRef(currentElement)) {\n              visitCurrentElement(\n                () => currentElement.type.render(props),\n                null,\n                currentContext,\n                currentContext,\n              ).then(innerResolve)\n            } else if (isClassComponent(Component)) {\n              // Class component\n              const instance = new Component(props, currentContext)\n\n              // In case the user doesn't pass these to super in the constructor\n              Object.defineProperty(instance, 'props', {\n                value: instance.props || props,\n              })\n              instance.context = instance.context || currentContext\n              // set the instance state to null (not undefined) if not set, to match React behaviour\n              instance.state = instance.state || null\n\n              // Make the setState synchronous.\n              instance.setState = newState => {\n                if (typeof newState === 'function') {\n                  // eslint-disable-next-line no-param-reassign\n                  newState = newState(\n                    instance.state,\n                    instance.props,\n                    instance.context,\n                  )\n                }\n                instance.state = Object.assign({}, instance.state, newState)\n              }\n\n              if (Component.getDerivedStateFromProps) {\n                const result = Component.getDerivedStateFromProps(\n                  instance.props,\n                  instance.state,\n                )\n                if (result !== null) {\n                  instance.state = Object.assign({}, instance.state, result)\n                }\n              } else if (instance.UNSAFE_componentWillMount) {\n                instance.UNSAFE_componentWillMount()\n              } else if (instance.componentWillMount) {\n                instance.componentWillMount()\n              }\n\n              const childContext = providesChildContext(instance)\n                ? Object.assign({}, currentContext, instance.getChildContext())\n                : currentContext\n\n              visitCurrentElement(\n                // Note: preact API also allows props and state to be referenced\n                // as arguments to the render func, so we pass them through\n                // here\n                () => instance.render(instance.props, instance.state),\n                instance,\n                currentContext,\n                childContext,\n              )\n                .then(() => {\n                  if (\n                    options.componentWillUnmount &&\n                    instance.componentWillUnmount\n                  ) {\n                    instance.componentWillUnmount()\n                  }\n                })\n                .then(innerResolve)\n            } else {\n              // Stateless Functional Component\n              visitCurrentElement(\n                () => Component(props, currentContext),\n                null,\n                currentContext,\n                currentContext,\n              ).then(innerResolve)\n            }\n          } else {\n            // A basic element, such as a dom node, string, number etc.\n            visitCurrentElement(\n              () => getChildren(currentElement),\n              null,\n              currentContext,\n              currentContext,\n            ).then(innerResolve)\n          }\n        })\n      }\n\n      // Portals\n      if (\n        currentElement.containerInfo &&\n        currentElement.children &&\n        currentElement.children.props &&\n        Array.isArray(currentElement.children.props.children)\n      ) {\n        return Promise.all(\n          currentElement.children.props.children.map(child =>\n            recursive(child, currentContext),\n          ),\n        )\n      }\n\n      return Promise.resolve()\n    }\n\n    recursive(tree, context).then(resolve, reject)\n  })\n}\n"],"names":["defaultOptions","forwardRefSymbol","Symbol","for","pReduce","iterable","reducer","initVal","Promise","resolve","reject","iterator","i","next","el","done","total","all","value","then","catch","pMapSeries","ret","a","b","push","val","ensureChild","child","render","getChildren","element","props","children","undefined","getType","type","nodeName","getProps","attributes","isReactElement","isClassComponent","Comp","prototype","isReactComponent","isPureReactComponent","isForwardRef","$$typeof","providesChildContext","instance","getChildContext","reactTreeWalker","tree","visitor","context","options","safeVisitor","err","recursive","currentElement","currentContext","Array","isArray","map","item","_context","_currentValue","Provider","Consumer","visitCurrentElement","compInstance","elContext","childContext","result","tempChildren","innerResolve","Component","Object","assign","defaultProps","defineProperty","state","setState","newState","getDerivedStateFromProps","UNSAFE_componentWillMount","componentWillMount","componentWillUnmount","containerInfo"],"mappings":"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"}